name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  validate:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      # Run Spectral
      - name: Lint spec with Spectral
        uses: stoplightio/spectral-action@v0.8.0
        with:
          file_glob: '*.yaml'
  
  generate-clients-and-servers:
    needs: validate
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3

      - name: Generate Angular Client
        uses: openapi-generators/openapitools-generator-action@v1
        with:
          generator: typescript-angular
          openapi-file: '/customer.yaml'
      
      - name: Generate Java Server
        uses: openapi-generators/openapitools-generator-action@v1
        with:
          generator: kotlin-spring
          openapi-file: '/customer.yaml'
      
      - name: Pushes angular client artifact
        uses: dmnemec/copy_file_to_another_repo_action@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
        with:
          source_file: 'typescript-angular-client'
          destination_repo: 'tadashi-hata/API-First-Developer-Portal'
          user_email: 'tadashi.hata@gft.com'
          user_name: 'tadashi-hata'

      - name: Pushes kotlin server artifact
        uses: dmnemec/copy_file_to_another_repo_action@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
        with:
          source_file: 'src/main/kotlin'
          destination_repo: 'tadashi-hata/API-First-Developer-Portal'
          user_email: 'tadashi.hata@gft.com'
          user_name: 'tadashi-hata'

  GenerateMock:
    needs: validate
    runs-on: self-hosted
    steps:
      - name: Generate Mocks
        run: |
          $Body = "{'specUrlOrPayload': 'https://raw.githubusercontent.com/tadashi-hata/API-First-Demo/main/customers.yaml'}"
          Invoke-WebRequest -UseBasicParsing -URI http://BRPC013768:1080/mockserver/openapi -Body $Body -ContentType "application/json" -Method 'PUT'
  
  Build-Docs:
    needs: validate
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Build docs
        run: |
          #!/bin/bash
          echo "Start redoc step"

          # Bundle docs into zero-dependency HTML file
          npx redoc-cli bundle *.yaml && \
          mv redoc-static.html index.html && \
          echo "Changed name from redoc-static.html to index.html" && \
          # Add favicon
          sed -i '7 i \ \ <link rel="icon" type="image/png" href="images/favicon.png"/>' index.html && \
          echo -e "\n Redoc step done!"
        
      - name: Pushes index.html
        uses: dmnemec/copy_file_to_another_repo_action@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
        with:
          source_file: 'index.html'
          destination_repo: 'tadashi-hata/API-First-Developer-Portal'
          user_email: 'tadashi.hata@gft.com'
          user_name: 'tadashi-hata'